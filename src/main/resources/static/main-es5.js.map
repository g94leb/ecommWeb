{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ecommerce/ecommerce.component.ts","webpack:///src/app/ecommerce/ecommerce.component.html","webpack:///src/app/ecommerce/models/product-order.model.ts","webpack:///src/app/ecommerce/models/product-orders.model.ts","webpack:///src/app/ecommerce/orders/orders.component.ts","webpack:///src/app/ecommerce/orders/orders.component.html","webpack:///src/app/ecommerce/products/products.component.ts","webpack:///src/app/ecommerce/products/products.component.html","webpack:///src/app/ecommerce/services/EcommerceService.ts","webpack:///src/app/ecommerce/shopping-cart/shopping-cart.component.ts","webpack:///src/app/ecommerce/shopping-cart/shopping-cart.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","providers","AppModule","declarations","imports","bootstrap","EcommerceComponent","collapsed","orderFinished","productsC","reset","shoppingCartC","ordersC","paid","toggleCollapsed","finishOrder","ProductOrder","product","quantity","ProductOrders","productOrders","OrdersComponent","ecommerceService","orders","sub","OrdersChanged","subscribe","loadTotal","saveOrder","TotalChanged","total","Total","ProductsComponent","products","productSelected","loadProducts","loadOrders","order","SelectedProductOrder","selectedProductOrder","productOrder","index","getProductIndex","shoppingCartOrders","splice","findIndex","value","getAllProducts","forEach","push","error","console","log","EcommerceService","http","productsUrl","ordersUrl","productOrderSubject","ordersSubject","totalSubject","ProductOrderChanged","asObservable","get","post","next","ShoppingCartComponent","onOrderFinished","loadCart","sum","price","unsubscribe","emit","calculateTotal","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [EcommerceService]\n})\nexport class AppComponent {\n\n}\n","<div class=\"container\">\n  <app-ecommerce></app-ecommerce>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {EcommerceComponent} from './ecommerce/ecommerce.component';\nimport {ProductsComponent} from './ecommerce/products/products.component';\nimport {ShoppingCartComponent} from './ecommerce/shopping-cart/shopping-cart.component';\nimport {OrdersComponent} from './ecommerce/orders/orders.component';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EcommerceComponent,\n    ProductsComponent,\n    ShoppingCartComponent,\n    OrdersComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [EcommerceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-cart/shopping-cart.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\n\n@Component({\n  selector: 'app-ecommerce',\n  templateUrl: './ecommerce.component.html',\n  styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n  public collapsed = true;\n  orderFinished = false;\n\n  @ViewChild('productsC')\n  productsC: ProductsComponent;\n\n  @ViewChild('shoppingCartC')\n  shoppingCartC: ShoppingCartComponent;\n\n  @ViewChild('ordersC')\n  ordersC: OrdersComponent;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  toggleCollapsed(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  finishOrder(orderFinished: boolean) {\n    this.orderFinished = orderFinished;\n  }\n\n  reset() {\n    this.orderFinished = false;\n    this.productsC.reset();\n    this.shoppingCartC.reset();\n    this.ordersC.paid = false;\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">Ecommerce Website</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"toggleCollapsed()\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div id=\"navbarResponsive\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"#\" (click)=\"reset()\">Home\n            <span class=\"sr-only\">(current)</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n<div class=\"row\">\n  <div class=\"col-md-9\">\n    <app-products #productsC [hidden]=\"orderFinished\"></app-products>\n  </div>\n  <div class=\"col-md-3\">\n    <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC\n                       [hidden]=\"orderFinished\"></app-shopping-cart>\n  </div>\n  <div class=\"col-md-6 offset-3\">\n    <app-orders #ordersC [hidden]=\"!orderFinished\"></app-orders>\n  </div>\n</div>\n","import {Product} from \"./product.model\";\n\nexport class ProductOrder {\n  product: Product;\n  quantity: number;\n\n  constructor(product: Product, quantity: number) {\n    this.product = product;\n    this.quantity = quantity;\n  }\n}\n","import {ProductOrder} from \"./product-order.model\";\n\nexport class ProductOrders {\n  productOrders: ProductOrder[] = [];\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../services/EcommerceService\";\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: ProductOrders;\n  total: number;\n  paid: boolean;\n  sub: Subscription;\n\n  constructor(private ecommerceService: EcommerceService) {\n    this.orders = this.ecommerceService.ProductOrders;\n  }\n\n  ngOnInit() {\n    this.paid = false;\n    this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n      this.orders = this.ecommerceService.ProductOrders;\n    });\n    this.loadTotal();\n  }\n\n  pay() {\n    this.paid = true;\n    this.ecommerceService.saveOrder(this.orders).subscribe();\n  }\n\n  loadTotal() {\n    this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n      this.total = this.ecommerceService.Total;\n    });\n  }\n}\n","<h2 class=\"text-center\">ORDER</h2>\n<ul>\n  <li *ngFor=\"let order of orders.productOrders\">\n    {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\n  </li>\n</ul>\n<h3 class=\"text-right\">Total amount: ${{ total }}</h3>\n\n<button class=\"btn btn-primary btn-block\" (click)=\"pay()\" *ngIf=\"!paid\">Pay</button>\n<div class=\"alert alert-success\" role=\"alert\" *ngIf=\"paid\">\n  <strong>Congratulation!</strong> You successfully made the order.\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Product} from \"../models/product.model\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  productOrders: ProductOrder[] = [];\n  products: Product[] = [];\n  selectedProductOrder: ProductOrder;\n  private shoppingCartOrders: ProductOrders;\n  sub: Subscription;\n  productSelected: boolean = false;\n\n  constructor(private ecommerceService: EcommerceService) {\n  }\n\n  ngOnInit() {\n    this.productOrders = [];\n    this.loadProducts();\n    this.loadOrders();\n  }\n\n  addToCart(order: ProductOrder) {\n    this.ecommerceService.SelectedProductOrder = order;\n    this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n    this.productSelected = true;\n  }\n\n  removeFromCart(productOrder: ProductOrder) {\n    let index = this.getProductIndex(productOrder.product);\n    if (index > -1) {\n      this.shoppingCartOrders.productOrders.splice(\n        this.getProductIndex(productOrder.product), 1);\n    }\n    this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n    this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n    this.productSelected = false;\n  }\n\n  getProductIndex(product: Product): number {\n    return this.ecommerceService.ProductOrders.productOrders.findIndex(\n      value => value.product === product);\n  }\n\n  isProductSelected(product: Product): boolean {\n    return this.getProductIndex(product) > -1;\n  }\n\n  loadProducts() {\n    this.ecommerceService.getAllProducts()\n      .subscribe(\n        (products: any[]) => {\n          this.products = products;\n          this.products.forEach(product => {\n            this.productOrders.push(new ProductOrder(product, 0));\n          })\n        },\n        (error) => console.log(error)\n      );\n  }\n\n  loadOrders() {\n    this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n      this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n    });\n  }\n\n  reset() {\n    this.productOrders = [];\n    this.loadProducts();\n    this.ecommerceService.ProductOrders.productOrders = [];\n    this.loadOrders();\n    this.productSelected = false;\n  }\n}\n","<div class=\"row card-deck\">\n  <div class=\"col-lg-4 col-md-6 mb-4\" *ngFor=\"let order of productOrders\">\n    <div class=\"card text-center\">\n      <div class=\"card-header\">\n        <h4>{{order.product.name}}</h4>\n      </div>\n      <div class=\"card-body\">\n        <a href=\"#\"><img class=\"card-img-top\" src={{order.product.pictureUrl}}\n                         alt=\"\"></a>\n        <h5 class=\"card-title\">${{order.product.price}}</h5>\n        <div class=\"row\">\n          <div class=\"col-4 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n            <input type=\"number\" min=\"0\" class=\"form-control\"\n                   [(ngModel)]=order.quantity>\n          </div>\n          <div class=\"col-4 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n            <button class=\"btn btn-primary\" (click)=\"addToCart(order)\"\n                    [disabled]=\"order.quantity <= 0\">Add To Cart\n            </button>\n          </div>\n          <div class=\"col-12\" *ngIf=\"isProductSelected(order.product)\">\n            <button class=\"btn btn-primary btn-block\"\n                    (click)=\"removeFromCart(order)\">Remove From Cart\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {ProductOrder} from \"../models/product-order.model\";\r\nimport {Subject} from \"rxjs/internal/Subject\";\r\nimport {ProductOrders} from \"../models/product-orders.model\";\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class EcommerceService {\r\n  private productsUrl = \"/api/products\";\r\n  private ordersUrl = \"/api/orders\";\r\n\r\n  private productOrder: ProductOrder;\r\n  private orders: ProductOrders = new ProductOrders();\r\n\r\n  private productOrderSubject = new Subject();\r\n  private ordersSubject = new Subject();\r\n  private totalSubject = new Subject();\r\n\r\n  private total: number;\r\n\r\n  ProductOrderChanged = this.productOrderSubject.asObservable();\r\n  OrdersChanged = this.ordersSubject.asObservable();\r\n  TotalChanged = this.totalSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllProducts() {\r\n    return this.http.get(this.productsUrl);\r\n  }\r\n\r\n  saveOrder(order: ProductOrders) {\r\n    return this.http.post(this.ordersUrl, order);\r\n  }\r\n\r\n  set SelectedProductOrder(value: ProductOrder) {\r\n    this.productOrder = value;\r\n    this.productOrderSubject.next();\r\n  }\r\n\r\n  get SelectedProductOrder() {\r\n    return this.productOrder;\r\n  }\r\n\r\n  set ProductOrders(value: ProductOrders) {\r\n    this.orders = value;\r\n    this.ordersSubject.next();\r\n  }\r\n\r\n  get ProductOrders() {\r\n    return this.orders;\r\n  }\r\n\r\n  get Total() {\r\n    return this.total;\r\n  }\r\n\r\n  set Total(value: number) {\r\n    this.total = value;\r\n    this.totalSubject.next();\r\n  }\r\n}\r\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n  orderFinished: boolean;\n  orders: ProductOrders;\n  total: number;\n  sub: Subscription;\n\n  @Output() onOrderFinished: EventEmitter<boolean>;\n\n  constructor(private ecommerceService: EcommerceService) {\n    this.total = 0;\n    this.orderFinished = false;\n    this.onOrderFinished = new EventEmitter<boolean>();\n  }\n\n  ngOnInit() {\n    this.orders = new ProductOrders();\n    this.loadCart();\n    this.loadTotal();\n  }\n\n  private calculateTotal(products: ProductOrder[]): number {\n    let sum = 0;\n    products.forEach(value => {\n      sum += (value.product.price * value.quantity);\n    });\n    return sum;\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  finishOrder() {\n    this.orderFinished = true;\n    this.ecommerceService.Total = this.total;\n    this.onOrderFinished.emit(this.orderFinished);\n  }\n\n  loadTotal() {\n    this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n      this.total = this.calculateTotal(this.orders.productOrders);\n    });\n  }\n\n  loadCart() {\n    this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n      let productOrder = this.ecommerceService.SelectedProductOrder;\n      if (productOrder) {\n        this.orders.productOrders.push(new ProductOrder(\n          productOrder.product, productOrder.quantity));\n      }\n      this.ecommerceService.ProductOrders = this.orders;\n      this.orders = this.ecommerceService.ProductOrders;\n      this.total = this.calculateTotal(this.orders.productOrders);\n    });\n  }\n\n  reset() {\n    this.orderFinished = false;\n    this.orders = new ProductOrders();\n    this.orders.productOrders = []\n    this.loadTotal();\n    this.total = 0;\n  }\n}\n","<div class=\"card text-white bg-danger mb-3\" style=\"max-width: 18rem;\">\n  <div class=\"card-header text-center\">Shopping Cart</div>\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Total: ${{total}}</h5>\n    <hr>\n    <h6 class=\"card-title\">Items bought:</h6>\n\n    <ul>\n      <li *ngFor=\"let order of orders.productOrders\">\n        {{ order.product.name }} - {{ order.quantity}} pcs.\n      </li>\n    </ul>\n\n    <button class=\"btn btn-light btn-block\" (click)=\"finishOrder()\"\n            [disabled]=\"orders.productOrders.length == 0\">Checkout\n    </button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}